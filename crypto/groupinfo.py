#!/usr/bin/python3

from typing import NamedTuple

class WeierstrassGroup(NamedTuple):
    id: int
    idstr: str
    bits: int
    p: int
    a: int
    b: int
    Gx: int
    Gy: int
    n: int
    h: int

class MontgomeryGroup(NamedTuple):
    id: int
    idstr: str
    bits: int
    p: int
    A: int
    order: int
    cofactor: int
    U_P: int
    V_P: int

class FFDHGroup(NamedTuple):
    id: int
    idstr: str
    bits: int
    p: int
    g: int

GROUP_INFO_BY_ID: dict[int, object] = {
    # SEC 2: Recommended Elliptic Curve Domain Parameters",
    # Standards for Efficient Cryptography 2 (SEC 2), Version 2.0, January 2010,
    # http://www.secg.org/sec2-v2.pdf
    0x0017: WeierstrassGroup(
        id = 0x0017,
        idstr = 'secp256r1',
        bits = 256,
        p = 0xffffffff00000001000000000000000000000000ffffffffffffffffffffffff,
        a = 0xffffffff00000001000000000000000000000000fffffffffffffffffffffffc,
        b = 0x5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b,
        Gx = 0x6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296,
        Gy = 0x4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5,
        n = 0xffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551,
        h = 0x1,
        ),
    0x0018: WeierstrassGroup(
        id = 0x0018,
        idstr = 'secp384r1',
        bits = 384,
        p = 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffff0000000000000000ffffffff,
        a = 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffff0000000000000000fffffffc,
        b = 0xb3312fa7e23ee7e4988e056be3f82d19181d9c6efe8141120314088f5013875ac656398d8a2ed19d2a85c8edd3ec2aef,
        Gx = 0xaa87ca22be8b05378eb1c71ef320ad746e1d3b628ba79b9859f741e082542a385502f25dbf55296c3a545e3872760ab7,
        Gy = 0x3617de4a96262c6f5d9e98bf9292dc29f8f41dbd289a147ce9da3113b5f0b8c00a60b1ce1d7e819d7a431d7c90ea0e5f,
        n = 0xffffffffffffffffffffffffffffffffffffffffffffffffc7634d81f4372ddf581a0db248b0a77aecec196accc52973,
        h = 0x1,
        ),
    0x0019: WeierstrassGroup(
        id = 0x0019,
        idstr = 'secp521r1',
        bits = 521,
        p = 0x01ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff,
        a = 0x01fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc,
        b = 0x0051953eb9618e1c9a1f929a21a0b68540eea2da725b99b315f3b8b489918ef109e156193951ec7e937b1652c0bd3bb1bf073573df883d2c34f1ef451fd46b503f00,
        Gx = 0x00c6858e06b70404e9cd9e3ecb662395b4429c648139053fb521f828af606b4d3dbaa14b5e77efe75928fe1dc127a2ffa8de3348b3c1856a429bf97e7e31c2e5bd66,
        Gy = 0x011839296a789a3bc0045c8a5fb42c7d1bd998f54449579b446817afbd17273e662c97ee72995ef42640c550b9013fad0761353c7086a272c24088be94769fd16650,
        n = 0x01fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa51868783bf2f966b7fcc0148f709a5d03bb5c9b8899c47aebb6fb71e91386409,
        h = 0x1,
        ),
    # RFC7748
    0x001d: MontgomeryGroup(
        id = 0x001d,
        idstr = 'x25519',
        bits = 255,
        p = 2**255 - 19,
        A = 486662,
        order = 2**252 + 0x14def9dea2f79cd65812631a5cf5d3ed,
        cofactor = 8,
        U_P = 9,
        V_P = 14781619447589544791020593568409986887264606134616475288964881837755586237401,
        ),
    0x001e: MontgomeryGroup(
        id = 0x001e,
        idstr = 'x448',
        bits = 448,
        p = 2**448 - 2**224 - 1,
        A = 156326,
        order = 2**446 - 0x8335dc163bb124b65129c96fde933d8d723a70aadc873d6d54a7bb0d,
        cofactor = 4,
        U_P = 5,
        V_P = 355293926785568175264127502063783334808976399387714271831880898435169088786967410002932673765864550910142774147268105838985595290606362,
        ),
    # RFC7919
    0x0100: FFDHGroup(
        id = 0x0100,
        idstr = 'ffdhe2048',
        bits = 2048,
        p = int.from_bytes(bytes.fromhex('''
            FFFFFFFF FFFFFFFF ADF85458 A2BB4A9A AFDC5620 273D3CF1
            D8B9C583 CE2D3695 A9E13641 146433FB CC939DCE 249B3EF9
            7D2FE363 630C75D8 F681B202 AEC4617A D3DF1ED5 D5FD6561
            2433F51F 5F066ED0 85636555 3DED1AF3 B557135E 7F57C935
            984F0C70 E0E68B77 E2A689DA F3EFE872 1DF158A1 36ADE735
            30ACCA4F 483A797A BC0AB182 B324FB61 D108A94B B2C8E3FB
            B96ADAB7 60D7F468 1D4F42A3 DE394DF4 AE56EDE7 6372BB19
            0B07A7C8 EE0A6D70 9E02FCE1 CDF7E2EC C03404CD 28342F61
            9172FE9C E98583FF 8E4F1232 EEF28183 C3FE3B1B 4C6FAD73
            3BB5FCBC 2EC22005 C58EF183 7D1683B2 C6F34A26 C1B2EFFA
            886B4238 61285C97 FFFFFFFF FFFFFFFF
            ''')),
        g = 2,
        ),
    0x0101: FFDHGroup(
        id = 0x0101,
        idstr = 'ffdhe3072',
        bits = 3072,
        p = int.from_bytes(bytes.fromhex('''
            FFFFFFFF FFFFFFFF ADF85458 A2BB4A9A AFDC5620 273D3CF1
            D8B9C583 CE2D3695 A9E13641 146433FB CC939DCE 249B3EF9
            7D2FE363 630C75D8 F681B202 AEC4617A D3DF1ED5 D5FD6561
            2433F51F 5F066ED0 85636555 3DED1AF3 B557135E 7F57C935
            984F0C70 E0E68B77 E2A689DA F3EFE872 1DF158A1 36ADE735
            30ACCA4F 483A797A BC0AB182 B324FB61 D108A94B B2C8E3FB
            B96ADAB7 60D7F468 1D4F42A3 DE394DF4 AE56EDE7 6372BB19
            0B07A7C8 EE0A6D70 9E02FCE1 CDF7E2EC C03404CD 28342F61
            9172FE9C E98583FF 8E4F1232 EEF28183 C3FE3B1B 4C6FAD73
            3BB5FCBC 2EC22005 C58EF183 7D1683B2 C6F34A26 C1B2EFFA
            886B4238 611FCFDC DE355B3B 6519035B BC34F4DE F99C0238
            61B46FC9 D6E6C907 7AD91D26 91F7F7EE 598CB0FA C186D91C
            AEFE1309 85139270 B4130C93 BC437944 F4FD4452 E2D74DD3
            64F2E21E 71F54BFF 5CAE82AB 9C9DF69E E86D2BC5 22363A0D
            ABC52197 9B0DEADA 1DBF9A42 D5C4484E 0ABCD06B FA53DDEF
            3C1B20EE 3FD59D7C 25E41D2B 66C62E37 FFFFFFFF FFFFFFFF
            ''')),
        g = 2,
        ),
    0x0102: FFDHGroup(
        id = 0x0102,
        idstr = 'ffdhe4096',
        bits = 4096,
        p = int.from_bytes(bytes.fromhex('''
            FFFFFFFF FFFFFFFF ADF85458 A2BB4A9A AFDC5620 273D3CF1
            D8B9C583 CE2D3695 A9E13641 146433FB CC939DCE 249B3EF9
            7D2FE363 630C75D8 F681B202 AEC4617A D3DF1ED5 D5FD6561
            2433F51F 5F066ED0 85636555 3DED1AF3 B557135E 7F57C935
            984F0C70 E0E68B77 E2A689DA F3EFE872 1DF158A1 36ADE735
            30ACCA4F 483A797A BC0AB182 B324FB61 D108A94B B2C8E3FB
            B96ADAB7 60D7F468 1D4F42A3 DE394DF4 AE56EDE7 6372BB19
            0B07A7C8 EE0A6D70 9E02FCE1 CDF7E2EC C03404CD 28342F61
            9172FE9C E98583FF 8E4F1232 EEF28183 C3FE3B1B 4C6FAD73
            3BB5FCBC 2EC22005 C58EF183 7D1683B2 C6F34A26 C1B2EFFA
            886B4238 611FCFDC DE355B3B 6519035B BC34F4DE F99C0238
            61B46FC9 D6E6C907 7AD91D26 91F7F7EE 598CB0FA C186D91C
            AEFE1309 85139270 B4130C93 BC437944 F4FD4452 E2D74DD3
            64F2E21E 71F54BFF 5CAE82AB 9C9DF69E E86D2BC5 22363A0D
            ABC52197 9B0DEADA 1DBF9A42 D5C4484E 0ABCD06B FA53DDEF
            3C1B20EE 3FD59D7C 25E41D2B 669E1EF1 6E6F52C3 164DF4FB
            7930E9E4 E58857B6 AC7D5F42 D69F6D18 7763CF1D 55034004
            87F55BA5 7E31CC7A 7135C886 EFB4318A ED6A1E01 2D9E6832
            A907600A 918130C4 6DC778F9 71AD0038 092999A3 33CB8B7A
            1A1DB93D 7140003C 2A4ECEA9 F98D0ACC 0A8291CD CEC97DCF
            8EC9B55A 7F88A46B 4DB5A851 F44182E1 C68A007E 5E655F6A
            FFFFFFFF FFFFFFFF
            ''')),
        g = 2,
        ),
    0x0103: FFDHGroup(
        id = 0x0103,
        idstr = 'ffdhe6144',
        bits = 6144,
        p = int.from_bytes(bytes.fromhex('''
            FFFFFFFF FFFFFFFF ADF85458 A2BB4A9A AFDC5620 273D3CF1
            D8B9C583 CE2D3695 A9E13641 146433FB CC939DCE 249B3EF9
            7D2FE363 630C75D8 F681B202 AEC4617A D3DF1ED5 D5FD6561
            2433F51F 5F066ED0 85636555 3DED1AF3 B557135E 7F57C935
            984F0C70 E0E68B77 E2A689DA F3EFE872 1DF158A1 36ADE735
            30ACCA4F 483A797A BC0AB182 B324FB61 D108A94B B2C8E3FB
            B96ADAB7 60D7F468 1D4F42A3 DE394DF4 AE56EDE7 6372BB19
            0B07A7C8 EE0A6D70 9E02FCE1 CDF7E2EC C03404CD 28342F61
            9172FE9C E98583FF 8E4F1232 EEF28183 C3FE3B1B 4C6FAD73
            3BB5FCBC 2EC22005 C58EF183 7D1683B2 C6F34A26 C1B2EFFA
            886B4238 611FCFDC DE355B3B 6519035B BC34F4DE F99C0238
            61B46FC9 D6E6C907 7AD91D26 91F7F7EE 598CB0FA C186D91C
            AEFE1309 85139270 B4130C93 BC437944 F4FD4452 E2D74DD3
            64F2E21E 71F54BFF 5CAE82AB 9C9DF69E E86D2BC5 22363A0D
            ABC52197 9B0DEADA 1DBF9A42 D5C4484E 0ABCD06B FA53DDEF
            3C1B20EE 3FD59D7C 25E41D2B 669E1EF1 6E6F52C3 164DF4FB
            7930E9E4 E58857B6 AC7D5F42 D69F6D18 7763CF1D 55034004
            87F55BA5 7E31CC7A 7135C886 EFB4318A ED6A1E01 2D9E6832
            A907600A 918130C4 6DC778F9 71AD0038 092999A3 33CB8B7A
            1A1DB93D 7140003C 2A4ECEA9 F98D0ACC 0A8291CD CEC97DCF
            8EC9B55A 7F88A46B 4DB5A851 F44182E1 C68A007E 5E0DD902
            0BFD64B6 45036C7A 4E677D2C 38532A3A 23BA4442 CAF53EA6
            3BB45432 9B7624C8 917BDD64 B1C0FD4C B38E8C33 4C701C3A
            CDAD0657 FCCFEC71 9B1F5C3E 4E46041F 388147FB 4CFDB477
            A52471F7 A9A96910 B855322E DB6340D8 A00EF092 350511E3
            0ABEC1FF F9E3A26E 7FB29F8C 183023C3 587E38DA 0077D9B4
            763E4E4B 94B2BBC1 94C6651E 77CAF992 EEAAC023 2A281BF6
            B3A739C1 22611682 0AE8DB58 47A67CBE F9C9091B 462D538C
            D72B0374 6AE77F5E 62292C31 1562A846 505DC82D B854338A
            E49F5235 C95B9117 8CCF2DD5 CACEF403 EC9D1810 C6272B04
            5B3B71F9 DC6B80D6 3FDD4A8E 9ADB1E69 62A69526 D43161C1
            A41D570D 7938DAD4 A40E329C D0E40E65 FFFFFFFF FFFFFFFF
            ''')),
        g = 2,
        ),
    0x0104: FFDHGroup(
        id = 0x0104,
        idstr = 'ffdhe8192',
        bits = 8192,
        p = int.from_bytes(bytes.fromhex('''
            FFFFFFFF FFFFFFFF ADF85458 A2BB4A9A AFDC5620 273D3CF1
            D8B9C583 CE2D3695 A9E13641 146433FB CC939DCE 249B3EF9
            7D2FE363 630C75D8 F681B202 AEC4617A D3DF1ED5 D5FD6561
            2433F51F 5F066ED0 85636555 3DED1AF3 B557135E 7F57C935
            984F0C70 E0E68B77 E2A689DA F3EFE872 1DF158A1 36ADE735
            30ACCA4F 483A797A BC0AB182 B324FB61 D108A94B B2C8E3FB
            B96ADAB7 60D7F468 1D4F42A3 DE394DF4 AE56EDE7 6372BB19
            0B07A7C8 EE0A6D70 9E02FCE1 CDF7E2EC C03404CD 28342F61
            9172FE9C E98583FF 8E4F1232 EEF28183 C3FE3B1B 4C6FAD73
            3BB5FCBC 2EC22005 C58EF183 7D1683B2 C6F34A26 C1B2EFFA
            886B4238 611FCFDC DE355B3B 6519035B BC34F4DE F99C0238
            61B46FC9 D6E6C907 7AD91D26 91F7F7EE 598CB0FA C186D91C
            AEFE1309 85139270 B4130C93 BC437944 F4FD4452 E2D74DD3
            64F2E21E 71F54BFF 5CAE82AB 9C9DF69E E86D2BC5 22363A0D
            ABC52197 9B0DEADA 1DBF9A42 D5C4484E 0ABCD06B FA53DDEF
            3C1B20EE 3FD59D7C 25E41D2B 669E1EF1 6E6F52C3 164DF4FB
            7930E9E4 E58857B6 AC7D5F42 D69F6D18 7763CF1D 55034004
            87F55BA5 7E31CC7A 7135C886 EFB4318A ED6A1E01 2D9E6832
            A907600A 918130C4 6DC778F9 71AD0038 092999A3 33CB8B7A
            1A1DB93D 7140003C 2A4ECEA9 F98D0ACC 0A8291CD CEC97DCF
            8EC9B55A 7F88A46B 4DB5A851 F44182E1 C68A007E 5E0DD902
            0BFD64B6 45036C7A 4E677D2C 38532A3A 23BA4442 CAF53EA6
            3BB45432 9B7624C8 917BDD64 B1C0FD4C B38E8C33 4C701C3A
            CDAD0657 FCCFEC71 9B1F5C3E 4E46041F 388147FB 4CFDB477
            A52471F7 A9A96910 B855322E DB6340D8 A00EF092 350511E3
            0ABEC1FF F9E3A26E 7FB29F8C 183023C3 587E38DA 0077D9B4
            763E4E4B 94B2BBC1 94C6651E 77CAF992 EEAAC023 2A281BF6
            B3A739C1 22611682 0AE8DB58 47A67CBE F9C9091B 462D538C
            D72B0374 6AE77F5E 62292C31 1562A846 505DC82D B854338A
            E49F5235 C95B9117 8CCF2DD5 CACEF403 EC9D1810 C6272B04
            5B3B71F9 DC6B80D6 3FDD4A8E 9ADB1E69 62A69526 D43161C1
            A41D570D 7938DAD4 A40E329C CFF46AAA 36AD004C F600C838
            1E425A31 D951AE64 FDB23FCE C9509D43 687FEB69 EDD1CC5E
            0B8CC3BD F64B10EF 86B63142 A3AB8829 555B2F74 7C932665
            CB2C0F1C C01BD702 29388839 D2AF05E4 54504AC7 8B758282
            2846C0BA 35C35F5C 59160CC0 46FD8251 541FC68C 9C86B022
            BB709987 6A460E74 51A8A931 09703FEE 1C217E6C 3826E52C
            51AA691E 0E423CFC 99E9E316 50C1217B 624816CD AD9A95F9
            D5B80194 88D9C0A0 A1FE3075 A577E231 83F81D4A 3F2FA457
            1EFC8CE0 BA8A4FE8 B6855DFE 72B0A66E DED2FBAB FBE58A30
            FAFABE1C 5D71A87E 2F741EF8 C1FE86FE A6BBFDE5 30677F0D
            97D11D49 F7A8443D 0822E506 A9F4614E 011E2A94 838FF88C
            D68C8BB7 C5C6424C FFFFFFFF FFFFFFFF
            ''')),
        g = 2,
        ),
    }

GROUP_INFO_BY_STR = {}
for id, cs in GROUP_INFO_BY_ID.items():
    GROUP_INFO_BY_STR[cs.idstr] = cs
